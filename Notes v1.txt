
<TODO> : Include notes on setting up EC2 instance

https://medium.com/@GalarnykMichael/aws-ec2-part-1-creating-ec2-instance-9d7f8368f78a
________________________________________________________________________________________________________________________________________________________________


<TODO: INCLUDE NOTES ON INTALLING PIP>

________________________________________________________________________________________________________________________________________________________________

<TODO: INCLUDE NOTES ON INSTALLING AWS CLI>

Get fingerprint for users with an aws educate account
	# Go to Vocareum. This is kinda the main page of your student AWS account.
	# Find the blue button Account Details, click it - find the Acess Key ID, Secret Key ID. 
	
	aws configure
	# add credentials as asked referring to the Vocareum site
	aws ec2 get-console-output --instance-id i-0146e9d2ff577c99f  #the last tab needs to be your EC2 instance id

________________________________________________________________________________________________________________________________________________________________



<TODO: ADD NOTES ON GOW FOR CHMOD USE>
________________________________________________________________________________________________________________________________________________________________

# Get Anaconda for ec2


1.Private key file is not publicly visible:
	chmod 400 .\test1GOES16.pem 

2. SSH into EC2 
	ssh -i .\test1GOES16.pem ubuntu@ec2-54-224-2-13.compute-1.amazonaws.com

3.Download Anaconda
	#use this link, copy link address for desired version
	https://repo.continuum.io/archive/index.html
	wget https://repo.continuum.io/archive/Anaconda3-2019.03-Linux-x86_64.sh

4.Instal Anaconda and its libraries in EC2
	bash Anaconda3-2019.03-Linux-x86_64.sh

5. source .bashrc

6. Install and open Python
	apt install ipython
	ipython

7. Autheticate jupyter with a password
	from IPython.lib import passwd
	passwd()
	#enter password
	#verify password
	#SAVE THE OUTPUT

## Output I received: 'sha1:ec82dfe950cf:214e31cc806dd965aea2b0f806c285a9764ec514'

8. Exit out of ipython
	exit()

9. In the terminal, type:
	jupyter notebook --generate-config
	mkdir certs
	cd certs
	sudo openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem
	cd ~/.jupyter/
	nano jupyter_notebook_config.py

10. This will open the config file. Change config to this:
	c = get_config()
	c.IPKernelApp.pylab = 'inline'
	c.NotebookApp.certfile = u'/home/ubuntu/certs/mycert.pem'
	c.NotebookApp.ip = '*'
	c.NotebookApp.open_browser = False
	# Your password below will be whatever you copied earlier
	c.NotebookApp.password = sha1:ec82dfe950cf:214e31cc806dd965aea2b0f806c285a9764ec514
	c.NotebookApp.port = 8888   #note if your port 8888 is in use change this

11. Exit out of the .py file:
	^O   # Crtl O - writes the file
	^X   # Ctrl X - exits the file

12. No hangups for notebooks. Type:
	nohup jupyter notebook

13. 
_______________________________________________________________________________________________
Setting up jupyter notebook in the cloud

1. protect key (pem file) against accidental overwriting:
	#cd into directory with pem file
	chmod 400 testGOES16.pem

2. Connecting to Linux Instance from Windows Using PuTTY
	# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/putty.html?icmpid=docs_ec2_console
	#Follow instructions at the link

	


3. SSH to EC2 instance
	ssh -i test1GOES16.pem ubuntu@ec2-54-196-119-28.compute-1.amazonaws.com

4. Connect to jupyter notebook
	# follow these steps if needed
	sudo snap install jupyter
	sudo apt-get update
	sudo apt install jupyter-core
	sudo apt install jupyter-notebook


5. Direct notebooks to browser port
	jupyter-notebook --no-browser --port=8888
	
6. SSH tunneling into jupyter notebooks
	# open a new terminal
	ssh -i test1GOES16.pem -L 8000:localhost:8888 ubuntu@ec2-54-196-119-28.compute-1.amazonaws.com
	
7. Open your browser and go to localhost:8000

8. Debugging: If browser does not load notebooks:








___________________________________________________________________________________________

1. Install xarray:
	pip install xarray
2. Install netCDF4
	pip install netCDF4
3. Install boto3
	pip install boto3
4. GOES on AWS details:
	https://registry.opendata.aws/noaa-goes/
	https://docs.opendata.aws/noaa-goes16/cics-readme.html
5. Quick guide to GOES-16 Product names
	http://edc.occ-data.org/goes16/getdata/
	#or refer to band reference guides

____________________________________________________________







